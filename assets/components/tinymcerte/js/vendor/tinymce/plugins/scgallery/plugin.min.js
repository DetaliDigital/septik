tinymce.PluginManager.add('scgallery', function(editor, url) {
    var openDialog = function () {
        return editor.windowManager.open({
            title: 'Добавить шорткод "Виджет галерея"',
            body: {
                type: 'panel',
                items: [
                    {
                        type: 'input',
                        name: 'tags',
                        label: 'Список тегов',
                    }, {
                        type: 'htmlpanel', // component type
                        html: '<p style="font-size: .75rem; margin-top: .25rem; margin-bottom: 1.25rem;">Список тегов, разделённых запятыми, для вывода файлов</p>'
                    }, {
                        type: 'input',
                        name: 'parents',
                        label: 'Список категорий'
                    }, {
                        type: 'htmlpanel', // component type
                        html: '<p style="font-size: .75rem; margin-top: .25rem; margin-bottom: 1.25rem;">Список категорий, через запятую, для поиска результатов. По умолчанию выборка ограничена текущим родителем. Если поставить 0 - выборка не ограничивается.</p>'
                    }, {
                        type: 'input',
                        name: 'resources',
                        label: 'Список ресурсов'
                    }, {
                        type: 'htmlpanel', // component type
                        html: '<p style="font-size: .75rem; margin-top: .25rem; margin-bottom: 1.25rem;">Список ресурсов, через запятую, для вывода в результатах. Если id товара начинается с минуса, этот товар исключается из выборки.</p>'
                    }, {
                        type: 'input',
                        name: 'limit',
                        label: 'Лимит выборки результатов'
                    }, {
                        type: 'htmlpanel', // component type
                        html: '<p style="font-size: .75rem; margin-top: .25rem; margin-bottom: 1.25rem;">Лимит выборки результатов. Если не заполнено или 0 - выборка не ограничена</p>'
                    }, {
                        type: 'input',
                        name: 'section_title',
                        label: 'Заголовок секции'
                    }, {
                        type: 'htmlpanel', // component type
                        html: '<p style="font-size: .75rem; margin-top: .25rem; margin-bottom: 1.25rem;">Заголок секции, если поле не заполнено то разметка скрывается</p>'
                    }
                ]
            },
            buttons: [
                {
                    type: 'cancel',
                    text: 'Close'
                },
                {
                    type: 'submit',
                    text: 'Save',
                    primary: true
                }
            ],
            onSubmit: function (api) {

                const data = api.getData();

                const prepare = Object.entries(data)
                    .filter(filter => filter[1] != '')
                    .map(el => {
                        if (el[0] == 'section_title') {
                            return `${el[0]}=/${el[1]}/`;
                        } else {
                            return `${el[0]}=${el[1]}`;
                        }
                    });

                const row = '[gallery]' + prepare.join(' ') + '[/gallery]';


                // Insert content when the window form is submitted
                editor.insertContent(row);
                api.close();
            }
        });
    };

    // Add a button that opens a window
    editor.ui.registry.addButton('scgallery', {
        text: 'Галерея',
        onAction: function () {
            // Open window
            openDialog();
        }
    });

    // Adds a menu item, which can then be included in any menu via the menu/menubar configuration
    editor.ui.registry.addMenuItem('scgallery', {
        text: 'Example plugin',
        onAction: function() {
            // Open window
            openDialog();
        }
    });

    return {
        getMetadata: function () {
            return  {
                name: "Example plugin",
                url: "http://exampleplugindocsurl.com"
            };
        }
    };
});